{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-ghost-casper/src/components/PostList.js","webpack:///./node_modules/gatsby-theme-ghost-casper/src/templates/author.js"],"names":["PostList","props","handleScroll","ticking","requestAnimationFrame","update","document","documentElement","offsetHeight","window","scrollY","innerHeight","setState","postsToShow","state","postsPerPage","maxPages","removeEventListener","posts","length","componentDidMount","addEventListener","this","componentWillUnmount","render","id","className","slice","map","post","index","key","node","React","Component","AuthorTemplate","pageContext","data","location","author","site","siteMetadata","title","siteUrl","navItems","edges","totalCount","postsByAuthor","filter","frontmatter","name","bodyAttributes","class","profileImageFile","fixed","childImageSharp","alt","bio","website","target","rel","href","twitter","getSocialUrl","facebook","rss","pageQuery"],"mappings":"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","file":"component---node-modules-gatsby-theme-ghost-casper-src-templates-author-js-48a41b25cbe2d3082d15.js","sourcesContent":["import React from 'react';\r\nimport PostCard from './PostCard';\r\n\r\nconst SCROLL_BUFFER = 100;\r\n\r\nexport default class PostList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      postsToShow: props.postsPerPage,\r\n    };\r\n\r\n    this.maxPages = props.posts.length;\r\n    this.ticking = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    if (!this.ticking) {\r\n      // console.log('Inside scroll handler')\r\n      this.ticking = true;\r\n      requestAnimationFrame(() => this.update());\r\n    }\r\n  };\r\n\r\n  update = () => {\r\n    const distaneToBottom =\r\n      document.documentElement.offsetHeight -\r\n      (window.scrollY + window.innerHeight);\r\n    if (distaneToBottom < SCROLL_BUFFER) {\r\n      // console.log('BU', this.state);\r\n      this.setState(\r\n        {\r\n          postsToShow: this.state.postsToShow + this.props.postsPerPage,\r\n        },\r\n        () => {\r\n          if (this.state.postsToShow >= this.maxPages)\r\n            window.removeEventListener('scroll', this.handleScroll);\r\n        }\r\n      );\r\n    }\r\n    this.ticking = false;\r\n  };\r\n\r\n  render() {\r\n    const { posts } = this.props;\r\n\r\n    return (\r\n      <main id='site-main' className='site-main outer'>\r\n        <div className='inner'>\r\n          <div className='post-feed'>\r\n            {posts.slice(0, this.state.postsToShow).map((post, index) => (\r\n              <PostCard key={index} post={post.node} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Helmet from 'react-helmet';\r\nimport Image from 'gatsby-image';\r\n\r\nimport Layout from '../components/Layout';\r\nimport PostList from '../components/PostList';\r\nimport Navigation from '../components/Navigation';\r\nimport Icons from '../components/Icons';\r\nimport { getSocialUrl } from '../utils/url';\r\n\r\nconst AuthorTemplate = ({ pageContext, data, location }) => {\r\n  const { author } = pageContext;\r\n  const { title, siteUrl } = data.site.siteMetadata;\r\n  const { posts, navItems } = data;\r\n  const { edges, totalCount } = posts;\r\n\r\n  const postsByAuthor = edges.filter(\r\n    post => post.node.frontmatter.author.id === author.id\r\n  );\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Helmet\r\n        title={`Posts By ${author.name} - ${title}`}\r\n        bodyAttributes={{\r\n          class: 'author-template',\r\n        }}\r\n      />\r\n      <header className='site-header outer {{#if feature_image}}'>\r\n        {/* // style='background-image: url({{feature_image}}){{else}}no-cover{{/if}}'> */}\r\n        <div className='inner'>\r\n          <Navigation location={location} navItems={navItems} />\r\n          <div className='site-header-content'>\r\n            {author.profileImageFile && (\r\n              <Image\r\n                className='author-profile-image'\r\n                fixed={author.profileImageFile.childImageSharp.fixed}\r\n                alt={author.name}\r\n              />\r\n            )}\r\n            <h1 className='site-title'>{author.name}</h1>\r\n            {author.bio && <h2 className='author-bio'>{author.bio}</h2>}\r\n            {/* <h2 className='site-description'>\r\n              {tag.description || `A collection of ${totalCount} post${totalCount > 1 ? 's' : ''}`}\r\n            </h2> */}\r\n            <div className='author-meta'>\r\n              {author.location && (\r\n                <div className='author-location'>\r\n                  {author.location} <span className='bull'>&bull;</span>\r\n                </div>\r\n              )}\r\n              <div className='author-stats'>\r\n                {totalCount === 0\r\n                  ? 'No posts'\r\n                  : `${totalCount} post${totalCount > 1 ? 's' : ''}`}\r\n                <span className='bull'>&bull;</span>\r\n              </div>\r\n              {author.website && (\r\n                <a\r\n                  className='social-link social-link-wb'\r\n                  target='_blank'\r\n                  rel='noreferrer noopener'\r\n                  href={author.website}\r\n                >\r\n                  <Icons.website />\r\n                </a>\r\n              )}\r\n              {author.twitter && (\r\n                <a\r\n                  className='social-link social-link-tw'\r\n                  target='_blank'\r\n                  rel='noreferrer noopener'\r\n                  href={getSocialUrl('twitter', author.twitter)}\r\n                >\r\n                  <Icons.twitter />\r\n                </a>\r\n              )}\r\n              {author.facebook && (\r\n                <a\r\n                  className='social-link social-link-fb'\r\n                  target='_blank'\r\n                  rel='noreferrer noopener'\r\n                  href={getSocialUrl('facebook', author.facebook)}\r\n                >\r\n                  <Icons.facebook />\r\n                </a>\r\n              )}\r\n              <a\r\n                className='social-link social-link-rss'\r\n                target='_blank'\r\n                rel='noreferrer noopener'\r\n                href={`https://feedly.com/i/subscription/feed/${siteUrl}/rss.xml`}\r\n              >\r\n                <Icons.rss />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <PostList posts={postsByAuthor} postsPerPage={10} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AuthorTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        siteUrl\r\n      }\r\n    }\r\n    navItems: allNavigationYaml {\r\n      edges {\r\n        node {\r\n          label\r\n          url\r\n        }\r\n      }\r\n    }\r\n    posts: allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { draft: { ne: true } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          ...PostCardFragment\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}